 Aligning terrain model and laser altimeter point clouds with the Ames Stereo Pipeline Ross A. Beyer1,2, Oleg Alexandrov2,3, and Zachary Moratto2,3. 1Carl Sagan Center at the SETI Institute, 2NASA Ames Research Center, MS 245-3, Moffett Field, CA, USA (Ross.A.Beyer@nasa.gov), and 3SGT, Inc. Dense digital terrain models and sparser networks of laser altimeter shots are collections of three dimensional points, or 'point clouds.' We often seek to understand how similar two point clouds are to one another, and so we have created a point cloud alignment tool, pc align, to do this. The pc align program can be found in the Ames Stereo Pipeline [1], which is available at http://irg.arc.nasa.gov/ngt/ stereo under an open source Apache 2.0 license. Planetary laser altimeter and lidar data are highly accurate, but sparse. Stereo-produced dense terrain models can be mis-located due to imperfect camera information. We have found that a tool which can align 3D stereo terrain to a priori known ground control points is valuable for absolutely locating an individual terrain model. This tool can also be used to compare two dense terrain models to each other, either to provide comparison between terrain models produced in different ways, or in order to mosaic the models together. The pc align program takes as input GeoTIFF DEMs, plain-text CSV files, PDS LOLA PointPerRow files, and ASP-output point cloud files. The first two formats allow a wide variety of data to be compared to one another. Iterative Closest Point Method The heart of the pc align tool is the use of Iterative Closest Point (ICP) techniques for aligning the two input point clouds using the libpointmatcher library [2]. ICP finds the best combination of rotation and translation that aligns two point clouds. One point cloud is kept fixed, while the second one is transformed to align to it. The inputs are the the two clouds, initial alignment transform (if any), and stopping criteria (number of iterations, minimum change in rotation and translation amounts at each iteration). The output is the combination of rotation and translation which brings the second point cloud in alignment to the first. Algorithmically, correspondences are identified between each point in the two point clouds. Then the program finds the rotation and translation combination that best aligns the points in the second point cloud to its corresponding reference point in the first point cloud using a mean squared error cost function. This transformation is then applied to the second point cloud. This process is then iteratively repeated until the stopping criteria are satisfied. The libpointmatcher library [2] provides two variations on the ICP approach: point-to-point and pointto-plane. So far, we have not found much difference in their application to planetary terrains, but the point-toplane approach usually works better when there is a large rotation component needed to align the two clouds. Tool Results The pc align tool solves for the transformation in the form of a spatial translation and rotation of one point cloud to best match the other. As a part of the ICP process, once this transformation is arrived at, the errors are calculated as the distance from each point in the first point cloud to the closest point in the second. For two identical point clouds that are simply translated these errors would be zero (there would be a perfect match), but in normal practice, while the transformation provides a metric for 'how far off' one point cloud is from another, the error metrics provide a sense of how 'different' the two point clouds are from one another. By default, when pc align discards outliers during the computation of the alignment transform, it keeps 75% of the points with the smallest errors, as well as other error metrics. As such, a way of judging the effectiveness of the tool is to look at the mean of the smallest 75% of the errors before and after alignment. Example Applications LROC DTM to LOLA This example aligns an LROC terrain model of the Apollo 15 area created by the USGS to the LOLA data. The initial 75% errors were 4.07 m, and the final errors were 2.76 m, and the best-fit motion was to translate the LROC model by 3.49 m south, 13.72 m west, and 2.81 m upwards. Figure 1 shows the individual errors of the LOLA shots against the LROC DEM, plotted on an orthoimage. CTX DTM to MOLA This example performs a similar alignment of an ASP-created CTX terrain model in Gale crater with the MOLA data over the region. Figure 2 shows the two sets of errors before and after alignment. CTX DTM to HRSC DTM Figure 3 shows the before and after alignment of the two CTX-derived DTMs to HRSC data.   http://irg.arc.nasa.gov/ngt/stereo http://irg.arc.nasa.gov/ngt/stereo Figure 1: Errors of individual LOLA shots versus the USGS DTM. Note the large differences between tracks which show the mis-alignment of LOLA tracks themselves. Figure 2: Errors of individual MOLA shots versus the CTX-derived DTMs. Left figure is before alignment, right figure is after. LROC DTM to LROC DTM These are two examples of comparing dense terrain models to each other. Here, we have an LROC terrain model of the Apollo 15 area created by ASU, and we compare a terrain model made by the USGS and one made by the UofA to the ASU model. You can see that the UofA model appears to be more different than the ASU model (and hence the USGS model), but that's because during the creation of the UofA model they only used a subset of the LOLA points as control points that the USGS and ASU models used. References [1] Z. M. Moratto, M. J. Broxton, R. A. Beyer, M. Lundy, K. Husmann, Lunar and Planetary Science Conference 41, S. Mackwell, E. Stansbery, eds., no. #2364 (Lunar and Planetary Institute, Houston, 2010). [2] F. Pomerleau, F. Colas, R. Siegwart, S. Magnenat, Autonomous Robots 34, 133 (2013). Figure 3: The left image shows obvious discontinuities between the CTX-derived terrain placed on top of the HRSC terrain. The right image shows the terrain after the CTX models have been aligned to the HRSC model. Figure 4: The left figure shows the error differences after best fit between the ASU and USGS models. The right figure shows the error differences after best fit between the ASU and UofA models. 