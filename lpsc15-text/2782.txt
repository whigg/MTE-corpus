2782.PDF
THE PRESENT AND FUTURE OF PATTERN MATCHING IN THE INTEGRATED SOFTWARE FOR IMAGERS AND SPECTROMETERS (ISIS).  P. A. Garcia1,  L. Keszthelyi1, T. Becker1, K. Becker1, S. Sides1,  1U. S. Geological Survey, 2255 N. Gemini Drive, Flagstaff, Arizona 86001 (pgarcia@usgs.gov).  Introduction:  The Integrated Software for Imagers and Spectrometers (ISIS) [1] was developed by the USGS Astrogeology Science Center to cartographically process images collected by current and past NASA and international planetary missions. In this abstract we discuss the pattern matching (i.e., identifying the same location on two or more images) capabilities currently available in ISIS, as well as research to expand them.  The most common use for pattern matching is to “tie” or “register” multiple images to each other.  ISIS has multiple applications used in the pattern matching process  –  including applications to identify positions on images with a high potential for accurate matching, and searching for similar patterns within images.  Pointreg is used to register multiple overlapping images together to create a tie-point network [2] that is used by photogrammetric bundle adjustment software (jigsaw), and coreg is used to tie two images to each other.   Current Pattern Matching in ISIS: The algorithms currently utilized by ISIS all rely on “areabased matching” (ABM) [3].  In the simplest terms, ABM attempts to find a sub-area of an image (the “pattern chip”) inside a sub-area of another image (the “search chip”).  The pattern chip is systematically “walked” through the search chip to find the best registration using one of three algorithms: “maximum correlation,” “minimum difference,” and “Gruen” [4]. Each algorithm provides the whole- or sub-pixel location of the highest value of the “goodness of fit” (GOF) between the pattern and search chips, assuming the fit is better than a user-defined tolerance value.  Additionally, some basic image processing can be applied to the pattern and search chips to improve the operation of the matching algorithms.  There are a large number of parameters the user must select to successfully use any of the pattern matching applications in ISIS (Table 1).   The values for these parameters are specified using a “definition file” which is in parameter value language (PVL) format.  In order to have these applications return useful results, it is almost always necessary to change parameter values from the defaults supplied in ISIS.  The primary objective of this presentation is to assist in selecting better parameter values.  In this abstract, we focus on the most widely used matching algorithm, “maximum correlation.” Maximum Correlation Algorithm.  This matching algorithm computes a correlation coefficient, R, between the pattern chip and each sub-region of the search chip.  No correlation returns R=0, a perfect correlation R=1, and a perfect anti-correlation R=-1.  ISIS uses the absolute value of R as the GOF, so anticorrelation is also considered a good fit.  A simple polynomial is fit to the cluster of highest GOF pixels to compute the sub-pixel location of the peak in GOF.  The user selects the minimum acceptable value for the GOF via the TOLERANCE parameter.  If no location in the search chip returns a value above this value, the matching algorithm “fails” (does not return a match).   Table 1. List of parameters and valid range of values for the pattern matching definition file.   Selecting a value for TOLERANCE.  A perfect correlation is impossible between two real images.  The causes include variations in (a) illumination geometry (including shadows), (b) spatial resolution, (c) noise, (d) spectral response, or (e) the actual surface and atmosphere.  The fewer variations, the closer the TOLERANCE value can be set to 1, but there is no substitute for trial and error to find an optimal value.  When the algorithm fails to identify valid matches, the defffile Keyword Group(s) Algorithms Type Values DefaultName Algorithm All String{MaximumCorrelation, MinimumDifference, Gruen}No default. Value required.Tolerance Algorithm All Real [0.0, infinity)No default. Value required.ChipInterpolator Algorithm All String{NearestNeighborType, BiLinearType, CubicConvolutionType}CubicConvolutionTypeReductionFactor Algorithm All Integer [1, infinity) 1SubPixelAccuracy Algorithm All Boolean {True, False} TRUEGradient Algorithm All String {None, Sobel} NoneSamplesPatternChip, SearchChipAll Integer [1, infinity)No default. Value required.LinesPatternChip, SearchChipAll Integer [1, infinity)No default. Value required.ValidMinimumPatternChip, SearchChipAll Real (-infinity, infinity) Isis::ValidMinimumValidMaximumPatternChip, SearchChipAll Real (-infinity, infinity) Isis::ValidMaximumMinimumZScore PatternChip All Real (0.0, infinity) 1ValidPercent PatternChip All Real (0.0, 100.0] 50SubchipValidPercent SearchChip All Real (0.0, 100.0] 50DistanceTolerance SurfaceModel All Real (0.0, infinity) 1.5WindowSize SurfaceModel All Integer [3, infinity) odd 5MaximumIterations Algorithm Gruen Integer (-infinity, infinity) 25AffineTranslationTolerance Algorithm Gruen Real (-infinity, infinity) 0.1AffineScaleTolerance Algorithm Gruen Real (-infinity, infinity) 0.5AffineShearTolerance Algorithm Gruen Real (-infinity, infinity) AffineScaleToleranceAffineTolerance Algorithm Gruen Real (-infinity, infinity) DBL_MAXSpiceTolerance Algorithm Gruen Real (-infinity, infinity) DBL_MAXRadioShiftTolerance Algorithm Gruen Real (-infinity, infinity) DBL_MAXRadioGainMinTolerance Algorithm Gruen Real (-infinity, infinity) -DBL_MAXRadioGainMaxTolerance Algorithm Gruen Real (-infinity, infinity) DBL_MAXFitChipScale Algorithm Gruen Real (-infinity, infinity) 0.1DefaultRadioGain Algorithm Gruen Real (-infinity, infinity) 0DefaultRadioShift Algorithm Gruen Real (-infinity, infinity) 02782.pdf
46th Lunar and Planetary Science Conference (2015)
user may increase the number of valid matches by lowering the TOLERANCE value being used. This, however, can also lead to more false matches or “false positives.”  This is one of the most insidious failure modes of pattern matching in ISIS, because there is no way to distinguish true and false matches except discovering poor results in later processing steps.  Even a limited number of bad points can seriously degrade the final product and it is time intensive to identify and remove these points, so it is generally preferable to set a higher TOLERANCE and to minimize false positives.   Sizing the Pattern and Search Chips. In general, larger pattern chips should provide more robust matches with fewer false positives since there are more data to be correlated.  Likewise, a larger search chip should compensate for errors in the initial estimate of the relative locations of the images.  However the computation required rises rapidly with chip size so keeping chip sizes as small as possible is often essential.   Table 2 provides some practical starting points for some commonly used data sets.  It must be emphasized that these are only suggested starting points for finding useful values – there are many cases where different values are needed to match images in these data sets.  The most important component of successful pattern matching in ISIS is to know your data well.  Knowing the resolution ranges, overlap patterns, and differences in viewing geometry and illumination of your data will help you achieve successful matching results.  Equally important is an understanding of the information content within the images.  Bland areas require large pattern chips to capture some unique surface patterns.  Areas with large numbers of similar features (e.g., secondary impact craters) similarly require large pattern chips.  In many cases the largest uncertainty in the relative position of the images is related to timing, resulting in much larger down-track errors than acrosstrack.  If there is too much change on the surface (e.g., images with and without frost) matching may be simply impossible with these algorithms.   Table 2. Suggested pattern and search chip sizes found useful in the past for some widely used instruments, given as samples x lines.  Some Other Parameters.  CHIPINTERPOLATOR allows a user to select an interpolation algorithm to be used if the pattern chip is being “warped” to match the geometry of the search chip. Since the automatic registration process can be time intensive, the REDUCTIONFACTOR allows a user to reduce the search and pattern chips by the factor supplied.  Increasing the REDUCTIONFACTOR speeds up computation, but also reduces the reliability of the pattern matching results.  To increase the chances of successful registration, a GRADIENT filter can be applied to the search and pattern chips to highlight the edges in the chips.  The use of a gradient filter can be useful in cases where images have differing illumination conditions.  Users can restrict pixel values in both the search and pattern chips by using the VALIDMINIMUM and VALIDMAXIMUM keywords.  MINIMUMZSCORE is used to help determine if a pattern chip contains enough variation for successful pattern matching.  Larger values will identify pattern chips with more variation in pixel values. Future Improvements to Pattern Matching in ISIS:  The primary focus is on adding feature-based matching (FBM) [3] capability to ISIS. This is a departure from the area-based matching (ABM) used in current ISIS applications.  In feature-based matching (FBM) algorithms the matching primitive is a feature – points, lines, circles, regions or global features called structures.  FBM detects distinct and robust objects from images based upon similarity of features. FBM uses significantly less pixels for feature computations than ABM and is less sensitive to noise.   Summary: The ability to correctly identify the same location across multiple images is an essential prerequisite for precision cartography.  The ISIS software currently provides tools to match images but the burden is on the user to discover (mostly via trial and error) the values for many of the parameters used by the software.  We present some of our experience to assist this research effort.  We are also working to implement more robust matching algorithms into ISIS over the next few years.   Acknowledgements: This work is funded by the NASA Planetary Geology and Geophysics Program References: [1] Keszthelyi, L., et al., 45th Lunar and Planetary Science Conference, 1686.pdf
, 2014., [2] Edmundson, K. et al., this volume., [3] Babbar, G., et al. International Journal of Information Technology and Knowledge Management 2.2 : 337-339, 2010., [4] Gruen, A. W., South African Journal of Remote Sensing, Photogrammetry, and Cartography, vol. 14, no. 3, pp 175-187, 1985.  Mission/DataSet Pattern Chip Size Search Chip SizeMESSENGER MDIS 31 x 31 101 x 101Cassini ISS 51 x 51 201 x 201Viking Orbiter 101 x 151 651 x 651Odyssey THEMIS IR 71 X 151 131 x 231MRO HiRISE 51 x 151 151 x 251MRO CTX 151 x 151 451 x 451LRO LROC NAC 151 x 201 501 x 10012782.pdf
46th Lunar and Planetary Science Conference (2015)
